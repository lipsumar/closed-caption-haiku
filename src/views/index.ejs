<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Closed Caption Haiku</title>
    <link rel="stylesheet" href="/css/style.css" />
    <% if(haiku){ %>
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content="@lipsumar" />
    <meta
      name="twitter:title"
      content='A haiku made with closed captions from "<%=haiku.movie%>"'
    />
    <meta
      name="twitter:image"
      content="https://cc-whispers.lipsumar.io<%= imageUrl %>"
    />

    <meta
      property="og:url"
      content="https://cc-whispers.lipsumar.io/haiku/<%=haiku.movieName%>"
    />
    <meta
      property="og:title"
      content='A haiku made with closed captions from "<%=haiku.movie%>"'
    />
    <meta
      property="og:image"
      content="https://cc-whispers.lipsumar.io<%= imageUrl %>"
    />
    <meta property="og:image:width" content="1280" />
    <meta property="og:image:height" content="720" />
    <% } %>
  </head>
  <body>
    <div class="app">
      <div class="app__sidebar">
        <div class="title">
          <h1>Closed Caption Haiku</h1>
          creates haikus using closed captions from movies and TV shows
          <a class="more-mobile">[more]</a>
        </div>

        <form action="/generate-haiku" method="post">
          <label for="q">Movie or TV show title:</label>
          <div class="search-field">
            <input
              type="text"
              id="q"
              autofocus
              value="<%=haiku ? haiku.movie : ''%>"
            />
            <button type="submit" class="play">Go</button>
          </div>
          <div class="state"></div>
        </form>

        <div class="about">
          <div class="about__inner">
            <button class="close" aria-label="close">×</button>
            <h2>How does it work?</h2>
            <p>
              Once you give a movie or serie title, we try to find closed
              caption (aka. subtitles) files for it, specifically files that are
              meant for the hearing impaired.
            </p>
            <p>
              These files include captions for loud noises, sound effects and
              music; you probably already seen such captions: [LOUD BANG] or
              [MUSIC INTENSIFIES]
            </p>
            <p>
              These captions are extracted and a haiku is composed randomly. If
              it's possible, the haiku will follow the rule of 5 syllables for
              the first sentence, then 7, then 5.
            </p>
          </div>
        </div>
      </div>
      <div
        class="app__main"
        style="background-image: url(/images/tv-static-9.jpeg)"
      >
        <video
          src="/video/tv-static-<%=haiku?haiku.bg:2%>_smol.mov"
          autoplay
          loop
          class="video-background"
        ></video>

        <% if(haiku){ %>
        <div class="screen-center">
          <% for(line of haiku.haiku.lines){ %>
          <div class="hi-line"><%= line %></div>
          <% } %>
          <div class="movie-title"><%=haiku.movie%></div>
        </div>

        <div class="screen-bottom">
          <div class="bottom-buttons">
            <div class="round-btn" id="again">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="feather feather-refresh-cw"
              >
                <polyline points="23 4 23 10 17 10"></polyline>
                <polyline points="1 20 1 14 7 14"></polyline>
                <path
                  d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"
                ></path>
              </svg>
            </div>
            <div class="round-btn" id="facebook">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="feather feather-facebook"
              >
                <path
                  d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"
                ></path>
              </svg>
            </div>
            <div class="round-btn" id="twitter">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="feather feather-twitter"
              >
                <path
                  d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"
                ></path>
              </svg>
            </div>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </body>
  <script>
    (() => {
      window.onload = function () {
        const videoEl = document.querySelector("video");
        videoEl.playbackRate = 0.4;
        videoEl.play();
      };

      document.querySelector(".more-mobile").addEventListener("click", (e) => {
        e.preventDefault();
        document.querySelector(".about").classList.add("open");
      });
      document.querySelector(".close").addEventListener("click", (e) => {
        e.preventDefault();
        document.querySelector(".about").classList.remove("open");
      });

      const stateEl = document.querySelector(".state");
      const formEl = document.querySelector("form");
      formEl.addEventListener("submit", (e) => {
        e.preventDefault();
        stateEl.innerHTML = '';
        const movieName = formEl.querySelector("#q").value.trim();
        if (!movieName) return;
        stateEl.innerHTML = `loading...`;
        fetch(formEl.action + "?movieName=" + encodeURIComponent(movieName), {
          method: "post",
        })
          .then((resp) => resp.json())
          .then((resp) => {
            window.location.href = `/haiku/${resp.id}`;
          })
          .catch((err) => {
            stateEl.innerHTML =
              '<div style="color:orange">Oops! Can’t find closed captions for this one, please try another</div>';
          });
      });

      document.querySelector("#again").addEventListener("click", (e) => {
          e.preventDefault();
          const movieName = <%-JSON.stringify(haiku.movie)%>;

          fetch("/generate-haiku/?movieName=" + encodeURIComponent(movieName), {
            method: "post",
          })
            .then((resp) => resp.json())
            .then((resp) => {
              window.location.href = `/haiku/${resp.id}`;
            });
        });

      document.querySelector("#facebook").addEventListener("click", (e) => {
        e.preventDefault();
        window.open(
          "https://www.facebook.com/share.php?u=<%-encodeURIComponent('https://cc-whispers.lipsumar.io/haiku/'+haiku.movieName) %>",
          "fb-share",
          "scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=600,height=600,left=300,top=100"
        );
      });

      document.querySelector("#twitter").addEventListener("click", (e) => {
        e.preventDefault();
        window.open(
          "https://twitter.com/intent/tweet?url=<%-encodeURIComponent('https://cc-whispers.lipsumar.io/haiku/'+haiku.movieName) %>",
          "tw-share",
          "scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=600,height=600,left=300,top=100"
        );
      });
    })();
  </script>
</html>
